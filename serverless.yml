service: property-service

frameworkVersion: "3"

package:
  individually: true
  excludeDevDependencies: true

provider:
  name: aws
  profile: serverless
  region: us-east-1
  logRetentionInDays: 5
  memorySize: 128
  apiName: ${self:service}
  apiGateway:
    shouldStartNameWithService: true
  timeout: 15
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  tracing:
    lambda: true
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    REGION: ${self:provider.region}
    TENANT_TABLE_NAME: ${self:custom.PropertyServiceTable.name}

functions:
  - ${file(./lambda/CreateTenant/config.yml)}
  - ${file(./lambda/UpdateTenant/config.yml)}
  - ${file(./lambda/ListTenants/config.yml)}
  - ${file(./lambda/DeleteTenant/config.yml)}
  - ${file(./lambda/GetTenant/config.yml)}
  - ${file(./lambda/PayRent/config.yml)}
  - ${file(./lambda/SendPaymentReminder/config.yml)}
  - ${file(./lambda/SendPaymentNotification/config.yml)}
  - ${file(./lambda/UpdateTenantStatus/config.yml)}
  - ${file(./lambda/CreateProperty/config.yml)}
  - ${file(./lambda/UpdatePropertyStatus/config.yml)}
  - ${file(./lambda/ListProperties/config.yml)}
  - ${file(./lambda/UpdateProperty/config.yml)}
  - ${file(./lambda/GetProperty/config.yml)}

resources:
  Resources:
    PropertyServiceTable: ${file(./resource/PropertyServiceTable.yml):PropertyServiceTable}

plugins:
  - serverless-esbuild
  - serverless-iam-roles-per-function

custom:
  PropertyServiceTable:
    name: !Ref PropertyServiceTable
    arn: !GetAtt PropertyServiceTable.Arn
    streamArn: !GetAtt [PropertyServiceTable, StreamArn]
#  PropertyServiceTableStream:
#    arn: !GetAtt [PropertyServiceTable, StreamArn]

  esbuild:
    bundle: true
    exclude:
      - aws-sdk
